name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches_ignore: []

jobs:
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Formatting
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true
          VALIDATE_PYTHON_PYLINT: true

  Linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout with submodules
        uses: actions/checkout@v3
      - name: Set up Miniconda for Linting
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.9
          environment-file: .test/config/environment.yml
          activate-environment: snakemake-env
      - name: Lint workflow
        run: snakemake --configfile .test/config/config.yaml --lint
        working-directory: .test

  Testing:
    runs-on: ubuntu-latest
    needs:
      - Linting
      - Formatting
    steps:
      - name: Checkout with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Set up Miniconda for Testing
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.9
          environment-file: .test/config/environment.yml
          activate-environment: snakemake-env
      - name: Test workflow
        run: snakemake --configfile .test/config/config.yaml --use-conda --show-failed-logs --cores 3 --conda-cleanup-pkgs cache --all-temp
        working-directory: .test
      - name: Test report
        run: snakemake --configfile .test/config/config.yaml --report report.zip
        working-directory: .test
